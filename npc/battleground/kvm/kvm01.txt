/*.-----------------------------------------------------------------------------.
  .          ____                          __                                   .
  .         /\  _`\                       /\ \__  __                            .
  .         \ \ \/\_\  _ __    __     __  \ \ ,_\/\_\  __  __     __            .
  .          \ \ \/_/_/\`'__\/'__`\ /'__`\ \ \ \/\/\ \/\ \/\ \  /'__`\          .
  .           \ \ \s\ \ \ \//\  __//\ \d\.\_\ \ \_\ \ \ \ \_/ |/\  __/          .
  .            \ \____/\ \_\\ \____\ \__/.\_\\ \__\\ \_\ \___/ \ \____\         .
  .             \/___/  \/_/ \/____/\/__/\/_/ \/__/ \/_/\/__/   \/____/         .
  .                                                                             .
  .                  2014~2016 © Creative Services and Developent               .
  .                            www.creativesd.com.br                            .
  .                          www.sbkmod.ragnagreen.com                          .
  .-----------------------------------------------------------------------------.
  . Script:                                                                     .
  .    1ª Arena de Krieger von Midgard                                          .
  .-----------------------------------------------------------------------------.
  . Autor: Romulo SM (sbk_) (HerculesWS)                           Versão: 6.0  .
  .                                                                             .
  . Compátivel:	eAthena e derivações.                    	                    .
  .-----------------------------------------------------------------------------.
  . Descrição:                                                                  .
  .    Arena no qual os Exércitos se confrontam diretamente.                    .
  *------------------------------------------------------------------------------*/

// Engine das Batalhas Campais de Krieger von Midgard
// -------------------------------------------------------
-	script	start#bat_c01	FAKE_NPC,{
OnInit:
	queue_create(5, "1ª Krieger von Midgard", "start#bat_c01::OnReadyCheck");
	mapwarp "bat_c01","bat_room",154,150;
	set $@KvM01BG_id1, bg_create_team("bat_c01", 52, 129, 52, 129, 0, "start#bat_c01::OnGuillaumeQuit", "start#bat_c01::OnGuillaumeDie", "");
	set $@KvM01BG_id2, bg_create_team("bat_c01", 147, 55, 147, 55, 1, "start#bat_c01::OnCroixQuit", "start#bat_c01::OnCroixDie", "");
	set .global_announce, 0;
	set .BlockStatus, 0;
	setwall "bat_c01",54,122,6,7,0,"batc01wall_a";
	setwall "bat_c01",55,122,5,7,0,"batc01wall_b";
	setwall "bat_c01",140,56,6,7,0,"batc01wall_c";
	setwall "bat_c01",140,57,5,7,0,"batc01wall_d";
	donpcevent "start#bat_c01::OnReadyCheck";
	end;

OnReadyCheck:
	if( .BlockStatus )
	{
		sleep 5000;
		donpcevent "start#bat_c01::OnReadyCheck";
	}
		
	set .BlockStatus, 1;

	set .@min_player, callfunc("bg_getarenainfo", 5, "min_player");
	set .@max_player, callfunc("bg_getarenainfo", 5, "max_player");
	set .@a_name$, callfunc("bg_getarenainfo", 5, "arena_name");
	set .@min_player, (.@min_player*2);
	
	if( .@max_player > MAX_BG_MEMBERS )
	{
		bg_console "(BG_ID: 5) Maximo de jogadores em uma equipe ultrapassa o limite estabelecido, definindo o maximo de jogadores para " + MAX_BG_MEMBERS + ".";
		set .@max_player, MAX_BG_MEMBERS;
	}
	
	queue_get_players 5;
	set .@playlist_team1, bg_team_size($@KvM01BG_id1);
	set .@playlist_team2, bg_team_size($@KvM01BG_id2);
	if( !.@queue_count )
	{
		set .BlockStatus, 0;
		end;
	}
	else if( $@KvM01BG && $@KvM01BG < 3 && .@queue_count && (.@playlist_team1 < .@max_player || .@playlist_team2 < .@max_player) )
	{
		set .@guill, 0;
		set .@croix, 0;
		set .@count_g, 0;
		set .@count_c, 0;
		
		// ---------------------------------------------------
		// -             Igualando os Exércitos              -
		// ---------------------------------------------------
		if( .@playlist_team1 < .@playlist_team2 )
		{
			set .@guill, .@playlist_team2-.@playlist_team1;
			for( set .@i,0; .@i < .@guill; set .@i, .@i + 1 )
			{
				bg_join_team $@KvM01BG_id1, 5, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@count_g, .@count_g + 1;
				set $@KvM01_Guillaume_Count, $@KvM01_Guillaume_Count+1;
				message .@queue_player$[.@i], "Você ingressou no Exército de Guillaume em uma batalha em " + .@a_name$ + " que já está acontecendo, e será teleportado em 10 segundos.";
			}
			
			deletearray .@queue_cid;
			deletearray .@queue_aid;
			deletearray .@queue_player$;
			set .@queue_count, 0;
			queue_get_players 5; // Reset
			set .@playlist_team1, bg_team_size($@KvM01BG_id1);
		}
		else if( .@playlist_team2 < .@playlist_team1 )
		{
			set .@croix, .@playlist_team1-.@playlist_team2;
			for( set .@i,0; .@i < .@croix; set .@i, .@i + 1 )
			{
				bg_join_team $@KvM01BG_id1, 5, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@count_c, .@count_c + 1;
				set $@KvM01_Croix_Count, $@KvM01_Croix_Count+1;
				message .@queue_player$[.@i], "Você ingressou no Exército de Croix em uma batalha em " + .@a_name$ + " que já está acontecendo, e será teleportado em 10 segundos.";
			}
			
			deletearray .@queue_cid;
			deletearray .@queue_aid;
			deletearray .@queue_player$;
			set .@queue_count, 0;
			queue_get_players 5; // Reset
			set .@playlist_team2, bg_team_size($@KvM01BG_id2);
		}
		// ---------------------------------------------------
		// -            Expandindo os Exércitos              -
		// ---------------------------------------------------
		if( .@queue_count && .@playlist_team1 == .@playlist_team2 && .@playlist_team1 < .@max_player && .@playlist_team2 < .@max_player )
		{
			set .@guill, .@max_player-.@playlist_team1;
			set .@croix, .@max_player-.@playlist_team2;
			
			if( .@queue_count > (.@guill+.@croix) )
				set .@queue_count, (.@guill+.@croix);
				
			if( .@queue_count%2 )
				set .@queue_count, .@queue_count-1;
			
			set .@size, .@queue_count/2;
			for( set .@i, 0; .@i < .@size; set .@i, .@i + 1 )
			{
				bg_join_team $@KvM01BG_id1, 5, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@players_name_g$[.@count_g], .@queue_player$[.@i];
				set .@count_g, .@count_g + 1;
				set $@KvM01_Guillaume_Count, $@KvM01_Guillaume_Count+1;
			}
			
			for( set .@i,.@size; .@i < .@queue_count; set .@i, .@i + 1 )
			{
				bg_join_team $@KvM01BG_id2, 5, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@players_name_c$[.@count_c], .@queue_player$[.@i];
				set .@count_c, .@count_c + 1;
				set $@KvM01_Croix_Count, $@KvM01_Croix_Count+1;
			}
		}
		
		if( .@count_c || .@count_g )
		{
			bg_updatescore "bat_c01",$@KvM01_Guillaume_Count,$@KvM01_Croix_Count;
			announce "[Batalhas Campais]: " + (.@count_c+.@count_g) + " jogadores estão sendo enviados para uma batalha que está acontecendo em " + .@a_name$ + ", os Exércitos foram equilibrados e expandidos.", bc_all, "0xFFCE00";
			sleep 3000;
		}
		
		deletearray .@queue_cid;
		deletearray .@queue_aid;
		deletearray .@queue_player$;
		set .@queue_count, 0;
		queue_get_players 5; // Reset
		
		set .@queue_size, queue_size(5);
		set .@team1_size, bg_team_size($@KvM01BG_id1);
		set .@team2_size, bg_team_size($@KvM01BG_id2);
		
		if( .@team1_size < .@max_player || .@team2_size < .@max_player )
		{
			set .@size, (2*.@max_player)-(.@team1_size+.@team2_size)-.@queue_size;
			announce "[Batalhas Campais]: Ainda há " + (.@size) + " vagas para uma batalha que está acontecendo em " + .@a_name$ + "!", bc_all, "0xFFCE00";
		}
	}
	else if( $@KvM01BG && !.global_announce && .@queue_count >= .@min_player )
	{
		announce "[Batalhas Campais]: A batalha está completa, mas há uma batalha acontecendo em " + .@a_name$ + ", todos jogadores que estão na fila de espera devem aguardar.", bc_all, "0xFFCE00";
		set .global_announce, 1;
	}
	else if( .@queue_count < .@min_player )
		announce "[Batalhas Campais]: Falta " + (.@min_player-.@queue_count) + " jogadores na batalha em " + .@a_name$ + "!", bc_all, "0xFFCE00";
	else
	{
		// ---------------------------------------------------
		// -                  Balanceamento                  -
		// ---------------------------------------------------
		if( .@queue_count > (.@max_player*2) )
			set .@queue_count, (.@max_player*2);
			
		if( .@queue_count%2 )
			set .@queue_count, .@queue_count-1;
			
		if( .@queue_count >= .@min_player )
		{
			set $@KvM01_Croix_Count, 0;
			set $@KvM01_Guillaume_Count, 0;
		
			for( set .@i,0; .@i < .@queue_count; set .@i, .@i + 2 )
			{
				// Ingressando no Exército de Guillaume
				bg_join_team $@KvM01BG_id1, 5, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				message .@queue_player$[.@i], "Você ingressou no Exército de Guillaume, será teleportado em 10 segundos.";
				set $@KvM01_Guillaume_Count, $@KvM01_Guillaume_Count+1;
				
				// Ingressando no Exército de Croix
				bg_join_team $@KvM01BG_id2, 5, .@queue_aid[.@i+1];
				queue_leave 0, .@queue_aid[.@i+1];
				message .@queue_player$[.@i+1], "Você ingressou no Exército de Croix, será teleportado em 10 segundos.";
				set $@KvM01_Croix_Count, $@KvM01_Croix_Count+1;
			}
		}
		
		bg_set_respawn $@KvM01BG_id1, 52, 129;
		bg_set_respawn $@KvM01BG_id2, 147, 55;
		bg_refresh_patent($@KvM01BG_id1);
		bg_refresh_patent($@KvM01BG_id2);
		set .global_announce, 0;
		set $@KvM01BG, 1;
		announce "[Batalhas Campais]: Ambos os Exércitos, estão completo boa sorte nas batalhas em " + .@a_name$ + ".", bc_all, "0xFFCE00";
		bg_updatescore "bat_c01",$@KvM01_Guillaume_Count,$@KvM01_Croix_Count;
		initnpctimer;
		disablenpc "Oficial KVM#KVM01A";
		disablenpc "Oficial KVM#KVM01B";
		sleep 3000;
		donpcevent "check#bat_c01::OnStart";
		
		if( $@BG_MODE && callfunc("bg_checkchangearena") == true )
			donpcevent "BattleGround#queue_main::OnReload";
			
		if( .@queue_count < (2*.@max_player) )
		{
			sleep 3000;
			set .@count, (2*.@max_player)-.@queue_count;
			announce "[Batalhas Campais]: Ainda há " + .@queue_count + " vagas nas batalhas em " + .@a_name$ + "!", bc_all, "0xFFCE00";
		}
	}
	set .BlockStatus, 0;
	end;

OnGuillaumeQuit:
	set .@char_id, getcharid(0);
	callfunc "bg_ranking", .@char_id, 5, 0, 1; // BG Queue Ranking: Computer negative vote.
	donpcevent "start#bat_c01::OnReadyCheck";
OnGuillaumeDie:
	if ($@KvM01BG == 2) {
		set $@KvM01_Guillaume_Count,$@KvM01_Guillaume_Count-1;
		bg_updatescore "bat_c01",$@KvM01_Guillaume_Count,$@KvM01_Croix_Count;
		if( $@KvM01_Guillaume_Count < 1 ) donpcevent "start#bat_c01::OnCroixWin";
		else {
			mapannounce "bat_c01", "O número de Soldados de Guillaume é "+$@KvM01_Guillaume_Count+".",bc_map,"0x00ff00";
			mapannounce "bat_c01", "O número de Soldados de Croix é "+$@KvM01_Croix_Count+".",bc_map,"0x00ff00";
		}
	}
	end;

OnCroixQuit:
	set .@char_id, getcharid(0);
	callfunc "bg_ranking", .@char_id, 5, 0, 1; // BG Queue Ranking: Computer negative vote.
	donpcevent "start#bat_c01::OnReadyCheck";
OnCroixDie:
	if ($@KvM01BG == 2) {
		set $@KvM01_Croix_Count,$@KvM01_Croix_Count-1;
		bg_updatescore "bat_c01",$@KvM01_Guillaume_Count,$@KvM01_Croix_Count;
		if( $@KvM01_Croix_Count < 1 ) donpcevent "start#bat_c01::OnGuillaumeWin";
		else {
			mapannounce "bat_c01", "O número de Soldados de Guillaume é "+$@KvM01_Guillaume_Count+".",bc_map,"0x00ff00";
			mapannounce "bat_c01", "O número de Soldados de Croix é "+$@KvM01_Croix_Count+".",bc_map,"0x00ff00";
		}
	}
	end;
	
OnGuillaumeWin:
	set $@KvM01BG, 3;
	set $@KvM01BG_Victory, 1;
	mapannounce "bat_c01", "Guillaume venceu!",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Parabéns aos membros do Exército de Guillaume.",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Todos serão movidos para o ponto de início.",bc_map,"0x00ff00";
	donpcevent "start#bat_c01::OnStop";
	end;

OnCroixWin:
	set $@KvM01BG, 3;
	set $@KvM01BG_Victory, 2;
	mapannounce "bat_c01", "Croix venceu!",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Parabéns aos membros do Exército de Croix.",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Todos serão movidos para o ponto de início.",bc_map,"0x00ff00";
	donpcevent "start#bat_c01::OnStop";
	end;

OnTimer1000:
	mapannounce "bat_c01", "Em 1 minuto, o KVM irá começar.",bc_map,"0x00ff00";
	end;

OnTimer3000:
	set .@event_timer, callfunc("bg_getarenainfo",5,"event_timer");
	mapannounce "bat_c01", "O tempo máximo para uma batalha KVM é de " + .@event_timer + " minutos.",bc_map,"0x00ff00";
	end;

OnTimer6000:
	mapannounce "bat_c01", "Por favor, prepare-se para a batalha KVM.",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Você pode usar encatamentos em seus aliados.",bc_map,"0x00ff00";
	end;

OnTimer30000:
	mapannounce "bat_c01", "30 segundos restantes para começar a batalha KVM.",bc_map,"0x00ff00";
	end;

OnTimer45000:
	mapannounce "bat_c01", "15 segundos restantes para começar a batalha KVM.",bc_map,"0x00ff00";
	donpcevent "::OnKvM01One";
	end;

OnTimer50000:
	mapannounce "bat_c01", "10 segundos reastantes para começar a batalha KVM.",bc_map,"0x00ff00";
	donpcevent "::OnKvM01Two";
	end;

OnTimer55000:
	mapannounce "bat_c01", "5 segundos restantes para começar a batalha KVM.",bc_map,"0x00ff00";
	donpcevent "::OnKvM01One";
	end;

OnTimer59000:
	mapannounce "bat_c01", "KVM está começando agora.",bc_map,"0x00ff00";
	donpcevent "::OnKvM01Two";
	end;

OnTimer61000:
	set $@KvM01BG, 2;
	bg_warp $@KvM01BG_id1,"bat_c01",61,120;
	bg_warp $@KvM01BG_id2,"bat_c01",138,63;
	bg_set_respawn $@KvM01BG_id1,61,120;
	bg_set_respawn $@KvM01BG_id2,138,63;
	donpcevent "time_event#bat_c01::OnEnable";
	end;

OnStop:
	stopnpctimer;
	sleep 1000;
	// Warp Teams
	enablenpc "Oficial KVM#KVM01A";
	enablenpc "Oficial KVM#KVM01B";
	bg_warp $@KvM01BG_id1,"bat_c01",53,128;
	bg_warp $@KvM01BG_id2,"bat_c01",146,55;
	donpcevent "start#bat_c01_Out::OnBegin";
	donpcevent "time_event#bat_c01::OnStop";
	end;
}

bat_room,169,211,0	warp	#kvm802	2,2,bat_room,154,150

// Starting Line
//============================================================
-	script	KVM01::CellEffect	FAKE_NPC,{
	end;

OnKvM01One:
	specialeffect EF_CHANGECOLD;
	end;

OnKvM01Two:
	specialeffect EF_CHANGEPOISON;
	end;
}

bat_c01,54,124,3	duplicate(CellEffect)	#RedcellA1-1	HIDDEN_WARP_NPC
bat_c01,55,124,3	duplicate(CellEffect)	#RedcellA2-1	HIDDEN_WARP_NPC
bat_c01,56,124,3	duplicate(CellEffect)	#RedcellA3-1	HIDDEN_WARP_NPC
bat_c01,57,124,3	duplicate(CellEffect)	#RedcellA4-1	HIDDEN_WARP_NPC
bat_c01,57,125,3	duplicate(CellEffect)	#RedcellA5-1	HIDDEN_WARP_NPC
bat_c01,57,126,3	duplicate(CellEffect)	#RedcellA6-1	HIDDEN_WARP_NPC
bat_c01,57,127,3	duplicate(CellEffect)	#RedcellA7-1	HIDDEN_WARP_NPC

bat_c01,145,59,3	duplicate(CellEffect)	#RedcellB1-1	HIDDEN_WARP_NPC
bat_c01,144,59,3	duplicate(CellEffect)	#RedcellB2-1	HIDDEN_WARP_NPC
bat_c01,143,59,3	duplicate(CellEffect)	#RedcellB3-1	HIDDEN_WARP_NPC
bat_c01,142,59,3	duplicate(CellEffect)	#RedcellB4-1	HIDDEN_WARP_NPC
bat_c01,142,56,3	duplicate(CellEffect)	#RedcellB5-1	HIDDEN_WARP_NPC
bat_c01,142,57,3	duplicate(CellEffect)	#RedcellB6-1	HIDDEN_WARP_NPC
bat_c01,142,58,3	duplicate(CellEffect)	#RedcellB7-1	HIDDEN_WARP_NPC

-	script	start#bat_c01_Out	FAKE_NPC,{
	end;

OnBegin:
	initnpctimer;
	end;
	
OnStop:
	stopnpctimer;
	end;

OnTimer1000:
	mapannounce "bat_c01", "Por favor fale com o Oficial para pegar sua recompensa.",bc_map,"0x00ff00";
	end;

OnTimer3000:
	mapannounce "bat_c01", "O Oficial irá conceder sua recompensa por 30 segundos.",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Em 30 segundos, o Oficial irá embora.",bc_map,"0x00ff00";
	end;

OnTimer5000:
	mapannounce "bat_c01", "Se você não falar com o Oficial, você não receberá sua recompensa.",bc_map,"0x00ff00";
	mapannounce "bat_c01", "Por favor, tenha cuidado.",bc_map,"0x00ff00";
	end;

OnTimer55000:
	mapannounce "bat_c01", "Você será enviado de volta.",bc_map,"0x00ff00";
	end;

OnTimer60000:
	// Computação de Ranking
	set .@w,2;
	while(.@w > 0 && $@KvM01BG_Victory < 3)
	{
		deletearray .@bg_members_cid;
		deletearray .@bg_members_aid;
		bg_get_team getd("$@KvM01BG_id"+.@w);
		for( set .@i,0; .@i < getarraysize(.@bg_members_cid); set .@i,.@i+1 )
		{
			if( $@KvM01BG_Victory == .@w )
				callfunc "bg_ranking", .@bg_members_cid[.@i], 5, 1, 1;
			else
				callfunc "bg_ranking", .@bg_members_cid[.@i], 5, 0, 1;
		}
		set .@w, .@w - 1;
	}
	
	stopnpctimer;
	set $@KvM01_Croix_Count, 0;
	set $@KvM01_Guillaume_Count, 0;
	set $@KvM01BG_Victory, 0;
	bg_kick_team $@KvM01BG_id1;
	bg_kick_team $@KvM01BG_id2;
	disablenpc "Oficial KVM#KVM01A";
	disablenpc "Oficial KVM#KVM01B";
	mapwarp "bat_c01","bat_room",154,150;
	maprespawnguildid "bat_c01",0,3; // Just in case someone else
	bg_updatescore "bat_c01",0,0;
	end;
}

-	script	time_event#bat_c01	FAKE_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	set .KvM_Timer, 0;
	stopnpctimer;
	initnpctimer;
	end;
	
OnStop:
	stopnpctimer;
	end;
	
OnTimer60000:
	set .KvM_Timer, .KvM_Timer+1;
	set .@event_timer, callfunc("bg_getarenainfo",5,"event_timer");
	set .@event_timer, .@event_timer-1;
	if( .KvM_Timer >= .@event_timer )
		mapannounce "bat_c01", "1 minuto restantes para terminar a batalha KVM.",bc_map,"0x00ff00";
	else
	{
		stopnpctimer;
		initnpctimer; // Reset timertick...
	}
	end;

OnTimer63000:
	mapannounce "bat_c01", "30 segundos restantes para terminar a batalha KVM.",bc_map,"0x00ff00";
	end;

OnTimer64500:
	mapannounce "bat_c01", "15 segundos restantes para terminar a batalha KVM.",bc_map,"0x00ff00";
	end;

OnTimer65000:
	mapannounce "bat_c01", "10 segundos restantes para terminar a batalha KVM.",bc_map,"0x00ff00";
	end;

OnTimer65500:
	mapannounce "bat_c01", "5 segundos restantes para terminar a batalha KVM.",bc_map,"0x00ff00";
	end;

OnTimer70000:
	mapannounce "bat_c01", "A batalha KVM terminou.",bc_map,"0x00ff00";
	if( $@KvM01_Croix_Count > $@KvM01_Guillaume_Count )
		donpcevent "start#bat_c01::OnCroixWin";
	else if( $@KvM01_Croix_Count < $@KvM01_Guillaume_Count )
		donpcevent "start#bat_c01::OnGuillaumeWin";
	else
	{ // Draw Game
		set $@KvM01BG, 3;
		set $@KvM01BG_Victory, 3;
		mapannounce "bat_c01", "O número de Guillaume's é "+$@KvM01_Guillaume_Count+".",bc_map,"0x00ff00";
		mapannounce "bat_c01", "O número de Croix's é "+$@KvM01_Croix_Count+".",bc_map,"0x00ff00";
		mapannounce "bat_c01", "Esta batalha terminou em empate.",bc_map,"0x00ff00";
		donpcevent "start#bat_c01::OnStop";
	}
	stopnpctimer;
	end;
}

// Checagem de Jogadores na Arena.
// -------------------------------------------------------
-	script	check#bat_c01	FAKE_NPC,{
OnStart:
	initnpctimer;
	end;
	
OnTimer60000:
	stopnpctimer;
	if( !getmapusers("bat_c01") )
	{
		set $@KvM01BG, 0;
		bg_kick_team $@KvM01BG_id1;
		bg_kick_team $@KvM01BG_id2;
		donpcevent "start#bat_c01_Out::OnStop";
		
		if( !$@BG_MODE || $BG_ARENA == 5 )
			donpcevent "start#bat_c01::OnReadyCheck";
	}
	else
		initnpctimer;
	end;
}

// Recompensas
// -------------------------------------------------------
bat_c01,51,130,5	script	Oficial KVM#KVM01A	4_M_KY_HEAD,{
	callfunc("bg_rewardnpc", 5, $@KvM01BG_id1, $@KvM01BG_id2, $@KvM01BG_Victory, 0);
	end;
	
OnInit:
	disablenpc "Oficial KVM#KVM01A";
	end;
}

bat_c01,148,53,1	script	Oficial KVM#KVM01B	4_M_CRU_HEAD,{
	callfunc("bg_rewardnpc", 5, $@KvM01BG_id1, $@KvM01BG_id2, $@KvM01BG_Victory, 1);
	end;
	
OnInit:
	disablenpc "Oficial KVM#KVM01B";
	end;
}